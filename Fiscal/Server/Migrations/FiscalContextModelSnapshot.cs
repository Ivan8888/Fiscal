// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Data;

namespace Server.Migrations
{
    [DbContext(typeof(FiscalContext))]
    partial class FiscalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Server.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Name = "DrinkStore"
                        },
                        new
                        {
                            CustomerId = 2,
                            Name = "Ivan"
                        });
                });

            modelBuilder.Entity("Server.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("InvoiceId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            InvoiceId = 1,
                            CustomerId = 1,
                            DateCreated = new DateTime(2019, 10, 16, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            InvoiceId = 2,
                            CustomerId = 2,
                            DateCreated = new DateTime(2019, 10, 16, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("Server.Models.InvoiceIteam", b =>
                {
                    b.Property<int>("InvoiceIteamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoiceIteamId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductID");

                    b.ToTable("InvoiceIteams");

                    b.HasData(
                        new
                        {
                            InvoiceIteamId = 1,
                            InvoiceId = 1,
                            ProductID = 1,
                            Quantity = 10m
                        },
                        new
                        {
                            InvoiceIteamId = 2,
                            InvoiceId = 1,
                            ProductID = 2,
                            Quantity = 2m
                        },
                        new
                        {
                            InvoiceIteamId = 3,
                            InvoiceId = 2,
                            ProductID = 1,
                            Quantity = 20m
                        },
                        new
                        {
                            InvoiceIteamId = 4,
                            InvoiceId = 2,
                            ProductID = 3,
                            Quantity = 3m
                        });
                });

            modelBuilder.Entity("Server.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Name = "beer",
                            Price = 100m
                        },
                        new
                        {
                            ProductId = 2,
                            Name = "vodka",
                            Price = 500m
                        },
                        new
                        {
                            ProductId = 3,
                            Name = "tequila",
                            Price = 1200m
                        });
                });

            modelBuilder.Entity("Server.Models.Invoice", b =>
                {
                    b.HasOne("Server.Models.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Server.Models.InvoiceIteam", b =>
                {
                    b.HasOne("Server.Models.Invoice", "Invoice")
                        .WithMany("InvoiceIteams")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.Product", "Product")
                        .WithMany("InvoiceIteams")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
